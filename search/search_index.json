{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p><code>esgpull</code> is a modern ESGF data management tool, bundled with a custom asynchronous interface with the ESGF Search API. It handles scanning, downloading and updating datasets, files and queries from ESGF.</p>"},{"location":"#feature-highlight","title":"Feature highlight","text":"<ul> <li>Simple syntax for fast data exploration</li> <li>Asynchronous download</li> <li>Highly configurable</li> <li>Plugin system for extensibility</li> </ul> <p>Search datasets</p> <p><code>esgpull</code> allows multiple ways for searching ESGF data, with facet and free-text terms together with options.</p> Facet termsFree-text termsFacets hintsHintsFiner grain queryDate filter <p>Query every CMIP6 dataset using facet syntax<pre><code>esgpull search project:CMIP6\n</code></pre> </p> <p>Narrow down the results with free-text term 'temperature'<pre><code>esgpull search project:CMIP6 temperature\n</code></pre> </p> <p>Find out which facets remain to be set with --facets<pre><code>esgpull search project:CMIP6 temperature --facets\n</code></pre> </p> <p>Get every potential facet value for the current query with --hints<pre><code>esgpull search project:CMIP6 temperature --hints variable_id\n</code></pre> </p> <p>Query all CMIP6 datasets with variable 'tas'<pre><code>esgpull search project:CMIP6 variable_id:tas\n</code></pre> </p> <p>Query CMIP6 datasets with variable 'tas' published since Jan 1st, 2023<pre><code>esgpull search project:CMIP6 variable_id:tas --from 2023-01-01\n</code></pre> </p>"},{"location":"#setup","title":"Setup","text":"<p>Run <code>$ pip install esgpull</code> to install the latest release and its dependencies.</p> <p>Have a look at the Installation page for more ways to install.</p>"},{"location":"#quickstart","title":"Quickstart","text":"<p>Jump directly to the Quickstart guide to get to know how to use <code>esgpull</code>.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>This page details some of the options available for configuring your <code>esgpull</code> installation.</p>"},{"location":"configuration/#configuration","title":"Configuration","text":"<p>On invocation, <code>$ esgpull config</code> will show the base configurations in the terminal.</p> <pre><code>$ esgpull config\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 /home/me/.esgpull/config.toml \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n[paths]\nauth = \"/home/me/.esgpull/auth\"\ndata = \"/home/me/.esgpull/data\"\ndb = \"/home/me/.esgpull/db\"\nlog = \"/home/me/.esgpull/log\"\ntmp = \"/home/me/.esgpull/tmp\"\n\n[credentials]\nfilename = \"credentials.toml\"\n\n[cli]\npage_size = 20\n\n[db]\nfilename = \"esgpull.db\"\n\n[download]\nchunk_size = 67108864\nhttp_timeout = 20\nmax_concurrent = 5\ndisable_ssl = false\n\n[api]\nindex_node = \"esgf-node.ipsl.upmc.fr\"\nhttp_timeout = 20\nmax_concurrent = 5\npage_limit = 50\n\n[api.default_options]\ndistrib = \"false\"\nlatest = \"true\"\nreplica = \"none\"\nretracted = \"false\"\n\n[plugins]\nenabled = \"false\"\n</code></pre> <p>To modify a config item from the command line, the dot-separated path to that item must be provided as the first argument along with the new value that item should get as the second argument:</p> <p><pre><code>$ esgpull config api.index_node esgf-data.dkrz.de\n</code></pre> <pre><code>[api]\nindex_node = \"esgf-data.dkrz.de\"\n\nPrevious value: esgf-node.ipsl.upmc.fr\n</code></pre></p> <p>On first call, this will generate a <code>config.toml</code> file in the <code>~/.esgpull</code> directory with only the modified values:</p> <p><pre><code>$ esgpull config api.index_node esgf-data.dkrz.de\n</code></pre> <pre><code>[api]\nindex_node = \"esgf-data.dkrz.de\"\n\n\ud83d\udc4d New config file created at /home/srodriguez/.esgpull_test_config_generate/config.toml.\n</code></pre></p> <p>If a user wishes to simply generate the <code>config.toml</code> file without modifying any values, they simply must run the following:</p> <p><pre><code>$ esgpull config --generate\n</code></pre> <pre><code>\ud83d\udc4d Config generated at /home/me/.esgpull/config.toml\n</code></pre></p> <p>Complete existing config with defaults</p> <p>The <code>--generate</code> flag also works when a configuration file already exists.</p> <p>In this case, a prompt will ask for permission to fill the existing file with default values for all missing options:</p> <p><pre><code>$ esgpull config --generate\n</code></pre> <pre><code>A config file already exists, fill it with missing defaults? [y/n] (n): y\n\ud83d\udc4d Config generated at /home/me/.esgpull/config.toml\n</code></pre></p>"},{"location":"configuration/#login","title":"Login","text":"<p>Although most data on ESGF can be downloaded without authentication, some datasets require a valid OpenID login and password.</p> <p>The ESGF OpenID authentication system is described on the ESGF user documentation.</p> <p>This can be provided from the command line by running the following:</p> <p><pre><code>$ esgpull login\n</code></pre> <pre><code>No credentials found.\n  [0] esg-dn1.nsc.liu.se\n  [1] esgf-data.dkrz.de\n  [2] ceda.ac.uk\n  [3] esgf-node.ipsl.upmc.fr\n  [4] esgf-node.llnl.gov\n  [5] esgf.nci.org.au\nSelect a provider: 0\nUser: MyESGFusername\nPassword: &lt;hidden&gt;\nCertificates are missing.\n\ud83d\udc4d Renewed successfully\n</code></pre></p> <p>The credentials will then be saved under the <code>~/.esgpull/auth</code> directory, within <code>credentials.toml</code>, which can then be used for future sessions.</p>"},{"location":"configuration/#plugins","title":"Plugins","text":"<p>Plugin functionality is disabled by default and can be enabled with:</p> <pre><code>$ esgpull config plugins.enabled true\n</code></pre> <p>Plugin-specific configurations are managed separately through the <code>esgpull plugins config</code> command and stored in a dedicated <code>plugins.toml</code> file. See the Plugins page for more information.</p>"},{"location":"download/","title":"Download","text":"<p>With <code>esgpull</code>, downloading files is done after a few steps gradually altering the state of the query that is to be downloaded.</p> <p>Datasets or files?</p> <p>In the search page, we only talked about datasets, whereas this document mentions files.</p> <p>For searching, datasets are used by default, since each file in a single dataset holds the same metadata. Then it makes sense to show datasets when exploring data.</p> <p><code>esgpull</code> only uses files in the database and for everything related to download.</p> <p>To make things easier to explain, we will use the following example query in this document:</p> <p><pre><code>$ esgpull search project:CMIP6 experiment_id:historical institution_id:IPSL variable_id:tas table_id:Amon member_id:r1i1p1f1 --distrib true --show\n</code></pre> </p> <p>Our query, named <code>&lt;7fd1f2&gt;</code>, corresponds to the following 15 datasets: </p>"},{"location":"download/#adding-a-query","title":"Adding a query","text":"<p>The first necessary step is to add <code>&lt;7fd1f2&gt;</code> to the database. Simply replace <code>search</code> with <code>add</code> and remove any flags specific to the search command, in our case we need to remove <code>--show</code>.</p> <p><pre><code>$ esgpull add project:CMIP6 experiment_id:historical institution_id:IPSL variable_id:tas table_id:Amon member_id:r1i1p1f1 --distrib true\n</code></pre> </p> <p>Option flags</p> <p>Notice how we keep the <code>--distrib true</code> option flag. This is due to the fact that options (<code>distrib</code>, <code>latest</code>, <code>replicas</code>, <code>retracted</code>) are part of the query, since different values on these optoins yield different sets of files.</p> <p><code>&lt;7fd1f2&gt;</code> is now stored in the database, but it remains untracked.</p>"},{"location":"download/#tracking-a-query","title":"Tracking a query","text":"<p>A query is untracked by default, to prevent downloading too much data by mistake. When a query is tracked, it will always be checked for new files on later usage of the <code>update</code> command, if it is provided no arguments.</p> <p>There are 2 ways to track a query:</p> <ul> <li>use the <code>track</code> command with the query id as an argument,</li> <li>use the <code>--track</code> flag on the <code>add</code> command to have it tracked directly.</li> </ul> <p><pre><code>$ esgpull track 7fd1f2\n</code></pre> </p>"},{"location":"download/#updating-a-query","title":"Updating a query","text":"<p>To associate a query with actual files, it needs to be updated.</p> <p>Updating a query will send requests to the ESGF search api to fetch metadata for each file corresponding to the query. Any file that is not already in the database is added and linked to the query. Files already in the database are simply linked to the query. This would happen for example if a file was previously fetched with another query.</p> <p>For those familiar with package managers such as <code>apt</code>, the <code>update</code> command should feel familiar with how those require update lists to fetch latest versions of packages before actually downloading (and installing in this case).</p> <p><pre><code>$ esgpull update 7fd1f2\n</code></pre> </p> <p>Replicas</p> <p>For this update, only 3 files were found from the initial 15, this is due to most of them being replicas.</p> <p>Currently the choice of data node from which to download the files is simply whichever comes first.</p>"},{"location":"download/#downloading","title":"Downloading","text":"<p>All that remains after these steps is to download the files:</p> <p><pre><code>$ esgpull download\n</code></pre> </p>"},{"location":"download/#configuration","title":"Configuration","text":"<p>RAM usage for downloads is bounded by the following formula:</p> <pre><code>RAM = Config::download.max_concurrent * Config::download.chunk_size\n</code></pre>"},{"location":"download/#failed-downloads","title":"Failed downloads","text":"<p>For each failed download, their status will be set to error.</p> <p>Those can be put back to the download queue, by using the <code>retry</code> command.</p> <p><pre><code>$ esgpull retry --help\n</code></pre> <pre><code>Usage: esgpull retry [OPTIONS] [[new|queued|starting|started|pausing|paused|er\n                     ror|cancelled|done]]...\n\nOptions:\n  -a, --all\n  -v\n  -h, --help  Show this message and exit.\n</code></pre></p> <p>Cancelled download</p> <p>If <code>esgpull</code> has been stopped with with Ctrl+C while downloading, all incomplete downloads will have the <code>cancelled</code> status.</p> <p>By default, <code>retry</code> will put both error and cancelled downloads back to the queue.</p> <p>Unexpected errors</p> <p>Some unexpected errors might break <code>esgpull</code>. In this case, the downloads will stay in a transient status starting.</p> <p>The <code>retry</code> command will not send those to the queue by default. It can still be done using either:</p> <ul> <li><code>esgpull retry starting</code> to send only those back to the queue</li> <li><code>esgpull retry --all</code> to send every download back to the queue (except <code>done</code> downloads of course)</li> </ul>"},{"location":"download/#nodes-with-untrusted-ssl-certificates","title":"Nodes with untrusted SSL certificates","text":"<pre><code>Some data nodes may have untrusted SSL certificates.\n\nSince esgpull uses SSL verification by default, there is a configuration option `download.disable_ssl` to bypass this behaviour.\n\nSSL verification can also be bypassed for a single download using the `--disable-ssl` flag for the `esgpull download` command.\n</code></pre>"},{"location":"glossary/","title":"Glossary","text":"Dataset collection of files. Described by metadata that follows its project's conventions. Facet basic element of a dataset's metadata. Pair of strings in the form <code>name:value</code>, equivalent to a python dictionary's item. Plugin custom code that extends <code>esgpull</code> functionality by responding to specific events."},{"location":"installation/","title":"Installation","text":"<p>This document covers a few ways to install <code>esgpull</code>, a necessary first step into being able to search and download ESGF datasets.</p>"},{"location":"installation/#python-version","title":"Python version","text":"<p><code>esgpull</code> only supports python 3.10 and newer.</p> <p>Supporting lower python versions could be done with future releases, do not hesitate to ask for it.</p>"},{"location":"installation/#installation","title":"Installation","text":"<p><code>esgpull</code> is distributed via PyPI:</p> <pre><code>pip install esgpull\nesgpull --help\n</code></pre> <p>For isolated installation, <code>uv</code> or <code>pipx</code> are recommended:</p> <pre><code># with uv\nuv tool install esgpull\nesgpull --help\n\n# alternatively, uvx enables running without explicit installation (comes with uv)\nuvx esgpull --help\n</code></pre> <pre><code># with pipx\npipx install esgpull\nesgpull --help\n</code></pre>"},{"location":"installation/#setup","title":"Setup","text":"<p>Installing <code>esgpull</code> is the first step to using it, but not the only one.</p> Once you have installed the <code>esgpull</code> package, make sure to read this section. <p>Only a few <code>esgpull</code> commands work out of the box, namely <code>search</code> and <code>convert</code>.</p> <p>To use the full set of functionalities, you will need to setup a local install with:</p> <pre><code>esgpull self install\n</code></pre>"},{"location":"installation/#why-do-i-need-to-install-twice","title":"Why do I need to install twice ?","text":"<p>The reason is that <code>esgpull</code> is prevented from writing anything on disk until installed.</p> <p>Installing <code>esgpull</code> equates choosing a directory in which it is allowed to write anything it needs to run properly. It also creates all the required files/directories in that directory and fetches some metadata from ESGF that is required to run properly.</p>"},{"location":"installation/#multiple-installs","title":"Multiple installs","text":"<p>It is possible to have multiple installs, which allows using multiple configurations on the same machine.</p> <p>Installing in a directory which is an existing <code>esgpull</code> install is possible and intended. It allows sharing a single configuration across multiple users.</p>"},{"location":"installation/#deleting-an-install","title":"Deleting an install","text":"<p>To delete an <code>esgpull</code> install, it is required that this install is active.</p> <p>Deleting does not <code>rm</code> any file, it only removes the option to use this install.</p> <pre><code>esgpull self choose &lt;path/to/install&gt;\nesgpull self delete\n</code></pre>"},{"location":"installation/#configuration","title":"Configuration","text":"<p><code>esgpull</code> is highly configurable, and it is recommended to take a look at the configuration page to learn more about it.</p>"},{"location":"plugins/","title":"Plugins","text":"<p><code>esgpull</code> includes a plugin system that allows you to extend functionality by running custom code when specific events occur during data operations.</p>"},{"location":"plugins/#available-events","title":"Available events","text":"<ul> <li>file_complete: A file download completes successfully</li> <li>file_error: A file download fails</li> <li>dataset_complete: All files from a dataset are downloaded</li> </ul> <p>Each event handler receives only the parameters relevant to that specific event.</p>"},{"location":"plugins/#enable-plugins","title":"Enable plugins","text":"<p>Plugins are disabled by default. Enable them using the main config command:</p> <pre><code>$ esgpull config plugins.enabled true\n</code></pre> <pre><code>[plugins]\nenabled = true\n\nPrevious value: False\n</code></pre>"},{"location":"plugins/#plugin-management","title":"Plugin management","text":""},{"location":"plugins/#list-available-plugins","title":"List available plugins","text":"<pre><code>$ esgpull plugins ls\n</code></pre> <pre><code>        plugin        \u2502      event       \u2502        function         \n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n \ud83d\udfe2 notification     \u2502  file_complete \u2502       notify_download   \n                      \u2502 file_error \u2502        notify_error   \n \ud83d\udd34 checksum_verify  \u2502  file_complete \u2502      verify_checksum    \n \ud83d\udd34 archive_backup   \u2502  file_complete \u2502      backup_file  \n                    \u2502  dataset_complete \u2502        backup_dataset\n</code></pre> <p>This detailed information can also be shown with JSON format with <code>--json</code>.</p>"},{"location":"plugins/#create-a-new-plugin","title":"Create a new plugin","text":"<p>Create a plugin template with all available events:</p> <pre><code>$ esgpull plugins create -n notification\n</code></pre> <pre><code>Plugin template created at: /path/to/esgpull/plugins/notification.py\nEdit the file to implement your custom plugin logic.\n</code></pre> <p>Create a plugin for specific events only:</p> <pre><code>$ esgpull plugins create -n notification file_complete file_error\n</code></pre> <pre><code>Plugin template created at: /path/to/esgpull/plugins/notification.py\nEdit the file to implement your custom plugin logic.\n</code></pre>"},{"location":"plugins/#enable-and-disable-plugins","title":"Enable and disable plugins","text":"<pre><code>$ esgpull plugins enable notification\n</code></pre> <pre><code>Plugin 'notification' enabled.\n</code></pre> <pre><code>$ esgpull plugins disable notification\n</code></pre> <pre><code>Plugin 'notification' disabled.\n</code></pre>"},{"location":"plugins/#test-plugins","title":"Test plugins","text":"<p>Test plugins by triggering one event with sample data:</p> <pre><code>$ esgpull plugins test file_complete\n</code></pre> <pre><code>[2025-06-19 17:33:09]  INFO      esgpull.plugins.notification\n\u2705 Downloaded: tas_Amon_CESM2_historical_r1i1p1f1_gn_185001-201412.nc\n   Size: 524288000 bytes\n\n[2025-06-19 17:33:09]  INFO      esgpull.plugins.checksum_verify\n\u2713 Checksum verified for tas_Amon_CESM2_historical_r1i1p1f1_gn_185001-201412.nc\n</code></pre> <p>This is the primary debugging tool for plugin development. Use it to verify handlers work correctly before running actual downloads or updates.</p>"},{"location":"plugins/#plugin-example","title":"Plugin example","text":"<p>Here's a simple notification plugin that sends a message when files are downloaded:</p> plugins/notification.py<pre><code>import pathlib\nimport logging\nfrom esgpull.plugin import Event, on\nimport esgpull.models\n\n@on(Event.file_complete, priority=\"normal\")\ndef notify_download(file: esgpull.models.File, destination: pathlib.Path, logger: logging.Logger):\n    \"\"\"Send notification when a file is downloaded.\"\"\"\n    print(f\"\u2705 Downloaded: {file.filename}\")\n    print(f\"   Size: {file.size} bytes\")\n    logger.info(f\"Notified download: {file.filename}\")\n\n@on(Event.file_error, priority=\"normal\") \ndef notify_error(file: esgpull.models.File, exception: Exception, logger: logging.Logger):\n    \"\"\"Send notification when a download fails.\"\"\"\n    print(f\"\u274c Failed: {file.filename}\")\n    print(f\"   Error: {exception}\")\n    logger.error(f\"Notified error: {file.filename}\")\n</code></pre>"},{"location":"plugins/#plugin-configuration","title":"Plugin configuration","text":"<p>Plugins are configured via an optional <code>Config</code> class in the plugin code. The <code>Config</code> class attributes define parameters and must include default values.</p> <p>Plugin configuration is stored separately from esgpull's main config file. This file contains a manifest of enabled/disabled plugins and their custom configurations (which override the <code>Config</code> class defaults). Use the <code>esgpull plugins config</code> subcommand to manage these settings.</p> <p>Let's extend our notification plugin with configuration:</p> plugins/notification.py<pre><code>import pathlib\nimport logging\nfrom esgpull.plugin import Event, on\nimport esgpull.models\n\nclass Config:\n    enabled = True\n    email_address = \"user@example.com\"\n    include_size = True\n    error_alerts = True\n\n@on(Event.file_complete, priority=\"normal\")\ndef notify_download(file: esgpull.models.File, destination: pathlib.Path, logger: logging.Logger):\n    \"\"\"Send notification when a file is downloaded.\"\"\"\n    if Config.enabled:\n        print(f\"\u2705 Downloaded: {file.filename}\")\n        if Config.include_size:\n            print(f\"   Size: {file.size} bytes\")\n        logger.info(f\"Notified download to {Config.email_address}: {file.filename}\")\n\n@on(Event.file_error, priority=\"normal\") \ndef notify_error(file: esgpull.models.File, exception: Exception, logger: logging.Logger):\n    \"\"\"Send notification when a download fails.\"\"\"\n    if Config.enabled and Config.error_alerts:\n        print(f\"\u274c Failed: {file.filename}\")\n        print(f\"   Error: {exception}\")\n        logger.error(f\"Notified error to {Config.email_address}: {file.filename}\")\n</code></pre> <p>View all plugin configurations: <pre><code>$ esgpull plugins config\n</code></pre></p> <pre><code>\u2500 /path/to/esgpull/plugins.toml \u2500\n[notification]\nenabled = true\nemail_address = \"admin@myproject.org\"\ninclude_size = true\nerror_alerts = true\n\n[checksum_verify]\nenabled = false\nalgorithm = \"sha256\"\n\n[archive_backup]\nenabled = false\narchive_path = \"/backup/esgf\"\n</code></pre> <p>View specific plugin configuration: <pre><code>$ esgpull plugins config notification\n</code></pre></p> <pre><code>[notification]\nenabled = true\nemail_address = \"admin@myproject.org\"\ninclude_size = true\nerror_alerts = true\n</code></pre> <p>View a specific configuration value: <pre><code>$ esgpull plugins config notification.email_address\n</code></pre></p> <pre><code>[notification]\nemail_address = \"admin@myproject.org\"\n</code></pre> <p>Set a configuration value: <pre><code>$ esgpull plugins config notification.email_address alerts@newdomain.com\n</code></pre></p> <pre><code>[notification]\nemail_address = \"alerts@newdomain.com\"\n\nPrevious value: admin@myproject.org\n</code></pre> <p>Reset to default value: <pre><code>$ esgpull plugins config notification.email_address --default\n</code></pre></p> <pre><code>\ud83d\udc4d Config reset to default for notification.email_address\n</code></pre>"},{"location":"plugins/#config-class-details","title":"Config class details","text":"<p>The <code>Config</code> class supports these data types:</p> <ul> <li>Strings (<code>str</code>): Text values like <code>\"INFO\"</code> or <code>\"user@example.com\"</code></li> <li>Integers (<code>int</code>): Whole numbers like <code>3</code> or <code>100</code> </li> <li>Floats (<code>float</code>): Decimal numbers like <code>0.5</code> or <code>10.75</code></li> <li>Booleans (<code>bool</code>): <code>True</code> or <code>False</code> values</li> </ul> <pre><code>class Config:\n    \"\"\"Example showing all supported data types\"\"\"\n    # String configuration\n    log_level = \"INFO\"\n    email_address = \"user@example.com\"\n\n    # Integer configuration  \n    max_retries = 3\n    timeout_seconds = 30\n\n    # Float configuration\n    threshold = 0.75\n    delay_factor = 1.5\n\n    # Boolean configuration\n    notifications_enabled = True\n    debug_mode = False\n</code></pre> <p>Important limitations: - Lists and dictionaries can be used in the <code>Config</code> class, but cannot be configured through the CLI <code>esgpull plugins config</code> command - For list/dictionary attributes, you must edit the <code>plugins.toml</code> file directly - Only simple scalar values (strings, integers, floats, booleans) can be managed via CLI commands - Configuration values are automatically type-checked when modified through CLI</p>"},{"location":"plugins/#configuration-management","title":"Configuration management","text":"<p>Plugin configurations are stored separately from the main <code>esgpull</code> configuration in a <code>plugins.toml</code> file. Only plugins with a <code>Config</code> class can be configured.</p> <p>The configuration system follows these principles:</p> <ul> <li>Defaults in code: Class attributes define default values</li> <li>Overrides in file: Only explicitly changed values are saved to <code>plugins.toml</code></li> <li>Type safety: Values are automatically converted and validated based on the default type</li> </ul>"},{"location":"queries/","title":"Queries","text":"<p>Queries are first-class in esgpull.</p>"},{"location":"queries/#database-schema","title":"Database schema","text":"<p>For reference</p> <pre><code>erDiagram\n\n  query {\n    BOOLEAN tracked\n    VARCHAR require\n    VARCHAR options_sha FK\n    VARCHAR select_sha FK\n    VARCHAR sha PK\n  }\n\n  options {\n    VARCHAR distrib\n    VARCHAR latest\n    VARCHAR replica\n    VARCHAR retracted\n    VARCHAR sha PK\n  }\n\n  select {\n    VARCHAR sha PK\n  }\n\n  select_facet {\n    VARCHAR select_sha PK\n    VARCHAR facet_sha PK\n  }\n\n  facet {\n    VARCHAR name\n    VARCHAR value\n    VARCHAR sha PK\n  }\n\n  query_tag {\n    VARCHAR query_sha PK\n    VARCHAR tag_sha PK\n  }\n\n  tag {\n    VARCHAR name\n    TEXT description\n    VARCHAR sha PK\n  }\n\n  query_file {\n    VARCHAR query_sha PK\n    VARCHAR file_sha PK\n  }\n\n  file {\n    VARCHAR file_id\n    VARCHAR dataset_id\n    VARCHAR master_id\n    VARCHAR url\n    VARCHAR version\n    VARCHAR filename\n    VARCHAR local_path\n    VARCHAR data_node\n    VARCHAR checksum\n    VARCHAR checksum_type\n    INTEGER size\n    VARCHAR status\n    VARCHAR sha PK\n  }\n\n  query ||--|{ options : \"options_sha\"\n  query ||--|{ select : \"select_sha\"\n  select  }|--|| select_facet : \"select_sha\"\n  select_facet ||--|{ facet : \"facet_sha\"\n  query  }|--|| query_tag : \"query_sha\"\n  query_tag ||--|{ tag : \"tag_sha\"\n  query  }|--|| query_file : \"query_sha\"\n  query_file ||--|{ file : \"file_sha\"</code></pre>"},{"location":"quickstart/","title":"Quickstart","text":"<p><code>esgpull</code> is a tool that simplifies usage of the ESGF Search API for data discovery, and manages procedures related to downloading and storing files from ESGF.</p> <p>To get started, follow Installation to set up a local <code>esgpull</code> install.</p>"},{"location":"quickstart/#data-discovery","title":"Data discovery","text":"<p>For a detailed explanation of the <code>search</code> command, read the data discovery page.</p>"},{"location":"quickstart/#searchadd-workflow-example","title":"Search/add workflow example","text":"<pre><code>$ esgpull search project:CMIP6 variable_id:tas experiment_id:'ssp*' member_id:r1i1p1f1 frequency:mon\n$ esgpull search project:CMIP6 variable_id:tas experiment_id:'ssp*' member_id:r1i1p1f1 frequency:mon --show\n$ esgpull search project:CMIP6 variable_id:tas experiment_id:'ssp*' member_id:r1i1p1f1 frequency:mon --detail 0\n$ esgpull add project:CMIP6 member_id:r1i1p1f1 frequency:mon --tag cmip6_monthly\n$ esgpull add --require cmip6_monthly variable_id:tas experiment_id:ssp245 --track\n$ esgpull add --require 2ddfa0 variable_id:tas experiment_id:ssp585 --track\n</code></pre>"},{"location":"quickstart/#converting-synda-selection-files","title":"Converting synda selection files","text":"<p>If you have existing selection files written for <code>synda</code>, you can convert those with no manual editing, using the <code>convert</code> command.</p> <p>Tagging</p> <p>If the first comment of a selection file contains a single word (symbols included, to allow emails), it will be used as a tag on the converted query.</p> <p>We will use these 2 selection files as examples:</p> example_cmip5.txt<pre><code># my_cmip5_query\nproject=CMIP5\nexperiment=historical\nfrequency=day\nensemble=r1i1p1\nvariable=tos\n</code></pre> example_cmip6.txt<pre><code># name.surname@institute.com\nmip_era=CMIP6\nproject=CMIP6\npriority=10900\nexperiment_id=1pctCO2-cdr\nvariable[Amon]=tas\nvariable[Lmon]=nbp\nvariable[Omon]=fgco2 mlotst hfds o2\n</code></pre> <p>Running the <code>convert</code> command with <code>--graph</code> will print the graph of queries the way it would appear after being added to the current install:</p> <p>Convert example<pre><code>$ esgpull convert example_cmip5.txt example_cmip6.txt --graph\n</code></pre> </p> <p>Notice how the \"root\" query from <code>example_cmip6.txt</code> is shown as <code>untracked</code>. This is done such that the root query's corresponding datasets are not installed.</p> <p>Since the root query always corresponds to a superset of the datasets return by any of its sub-queries, it would be pointless to download every dataset from the root query.</p>"},{"location":"quickstart/#adding-converted-queries","title":"Adding converted queries","text":"<p>To add the queries obtained from converting the selection files, they must first be exported to a yaml representation with:</p> <pre><code>$ esgpull convert example_cmip5.txt example_cmip6.txt --out examples_converted.yaml\n</code></pre> <p>Adding them is done through the <code>add</code> command, under the parameter <code>--query-file</code>:</p> <pre><code>$ esgpull add --query-file examples_converted.yaml\n$ esgpull show\n</code></pre>"},{"location":"quickstart/#downloading","title":"Downloading","text":"<pre><code>$ esgpull update &lt;id&gt;\n$ esgpull show\n$ esgpull download &lt;id&gt;\n$ esgpull status\n</code></pre> <p>Loop at the download page for more information.</p>"},{"location":"quickstart/#extending-with-plugins","title":"Extending with plugins","text":"<p><code>esgpull</code> can be extended with custom plugins that respond to download events:</p> <pre><code>$ esgpull config plugins.enabled true\n$ esgpull plugins create -n notification file_complete\n$ esgpull plugins enable notification\n</code></pre> <p>See the Plugins page for more details on creating and managing plugins.</p>"},{"location":"search/","title":"Data discovery","text":"<p>There are two ways to search for datasets with <code>esgpull</code>: facet and free-text search. Both are done through the <code>search</code> command.</p>"},{"location":"search/#facet-search","title":"Facet search","text":"<p>Facet search is performed with all terms using the facet syntax <code>&lt;name&gt;:&lt;value&gt;</code>, for which both name and value are matched exactly.</p> <p>Search CMIP6 datasets<pre><code>$ esgpull search project:CMIP6\n</code></pre> </p>"},{"location":"search/#multiple-values-for-a-facet","title":"Multiple values for a facet","text":"<p>Multiples values can be used by separating each value with a <code>,</code> comma.</p> <p>Single variable search<pre><code>$ esgpull search variable_id:c2h2 -0\n$ esgpull search variable_id:c2h6 -0\n</code></pre> </p> <p>Combine both variables in a single search<pre><code>$ esgpull search variable_id:c2h2,c2h6 -0\n</code></pre> </p> <p>Using spaces \"disconnects\" values from the facet name</p> <p></p> <p>If you don't know the facets' names</p> <p><code>esgpull</code> provides a handy way to print out facet names that can be used to refine a query:</p> <p><pre><code>esgpull search variable_id:c2h2,c2h6 --facets\n</code></pre> </p> <p>Using a facet that is not in this list will always result in a query with 0 corresponding datasets.</p>"},{"location":"search/#ignoring-a-facet","title":"Ignoring a facet","text":"<p>A facet can be ignored by prepending its name with <code>!</code>. In this case, it is not possible to specify other values for this facet.</p> <p>Ignore all datasets from IPSL<pre><code>$ esgpull search !institution_id:IPSL\n</code></pre> </p>"},{"location":"search/#free-text-search","title":"Free-text search","text":"<p>Free-text search is performed on any term not using the <code>&lt;name&gt;:&lt;value&gt;</code> syntax. Each term is sent to the ESGF search API, which uses Apache Solr to match results.</p> <p>Solr syntax</p> <p>Solr will always try to match any of the search terms.</p> <pre><code>esgpull search surface temperature # will match either `surface` or `temperature`\n</code></pre> <p>To make sure all the words are matched, terms must be separated with <code>AND</code> and written between quotes <pre><code>esgpull search \"surface AND temperature\" # will match BOTH `surface` and `temperature`\n</code></pre></p>"},{"location":"search/#wildcard-syntax","title":"Wildcard syntax","text":"<p>A wildcard <code>*</code> can be used in both facet (value only) and free-text search, allowing for more controllable search results.</p> <p>Note that on most shells, the wildcard symbol should be inside <code>\"</code> quotes, to escape it from being expanded by the shell before <code>esgpull</code> receives any input.</p> <p>All initializations for areacella variable from piControl experiments<pre><code>$ esgpull search \"member_id:r1i*p1f1\" table_id:fx variable_id:areacella experiment_id:piControl\n</code></pre> </p>"},{"location":"search/#case-sensitivity","title":"Case sensitivity","text":"<p>For facet search, the case must match exactly, so <code>project:cmip6</code> will give entirely different results than <code>project:CMIP6</code>.</p> <p>In the case of free-text search, the opposite is true, case is entirely insensitive, and may lead to funky results.</p>"}]}